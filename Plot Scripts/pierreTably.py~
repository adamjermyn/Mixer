import numpy as np
import pickle
from subprocess import Popen, PIPE

def parseOut(out):
	print(out)
	lines = out.split('\n')
	lines = [l.split(' ') for l in lines][:-1]
	lines = [[float(l) for l in line if l!=''] for line in lines]
	lines = [l for l in lines if len(l) > 0]
	print(lines)
	return np.array(lines)

def run(omega, theta, wOverOmega, tw, tS, tP):
	pp = Popen(['./main',str(omega),str(tw),str(wOverOmega*omega),str(tS),str(tP),'-1'], stdin=PIPE, stdout=PIPE, stderr=PIPE)
	output, err = pp.communicate()
	rc = pp.returncode
	d = parseOut(output)
	return d


omega = 10**np.linspace(-3,-1,num=15,endpoint=True)
theta =	np.linspace(0.1,np.pi-0.1,num=17,endpoint=True)
wOverOmega = 10**np.linspace(-2.5,-0.5,num=10,endpoint=True)

tw = theta
tS = theta
tP = theta

data = np.zeros((len(theta),len(omega),len(wOverOmega),7,7))
errors = np.zeros((len(theta),len(omega),len(wOverOmega),7,7))

for i in range(len(theta)):
	for j in range(len(omega)):
		for k in range(len(wOverOmega)):
			print(i,j,k)
			d = run(omega[j], theta[i], wOverOmega[k], tw[i], tS[i], tP[i])
			data[i,j,k] = d[:7]
			errors[i,j,k] = d[7:]

np.savetxt('data.out',np.reshape(data,(-1,)))
np.savetxt('errors.out',np.reshape(errors,(-1,)))

pickle.dump([omega, theta, wOverOmega, data, errors, tw, tS, tP],open('/data/vault/asj42/dumpG.dat','w+'))
